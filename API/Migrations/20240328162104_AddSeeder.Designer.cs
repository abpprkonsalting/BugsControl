// <auto-generated />
using System;
using API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(BugsControlContext))]
    [Migration("20240328162104_AddSeeder")]
    partial class AddSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.Models.Bug", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Bugs");
                });

            modelBuilder.Entity("API.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = "0e2286fe-816d-4a8a-9a0f-253781d4d4bd",
                            Description = "projecto1",
                            Name = "Projecto1"
                        },
                        new
                        {
                            Id = "6691f1be-cea2-4716-85ef-afeeb7d9f999",
                            Description = "projecto2",
                            Name = "Projecto2"
                        },
                        new
                        {
                            Id = "ac404f54-5654-4aba-8929-abdb08fab53d",
                            Description = "projecto3",
                            Name = "Projecto3"
                        },
                        new
                        {
                            Id = "5e8323d5-0de5-4425-a7ef-9edca21e1aff",
                            Description = "projecto4",
                            Name = "Projecto4"
                        },
                        new
                        {
                            Id = "e1a23b85-8e9b-43bb-8c1b-e337d96fbdae",
                            Description = "projecto5",
                            Name = "Projecto5"
                        });
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "22848509-4524-4b2d-9f9c-654eb1efae9c",
                            Name = "Usuario1",
                            Surname = ""
                        },
                        new
                        {
                            Id = "692989f9-4308-441a-a861-18a9133162eb",
                            Name = "Usuario2",
                            Surname = ""
                        },
                        new
                        {
                            Id = "3e29e257-0472-4811-b1dc-2a00e99e9b31",
                            Name = "Usuario3",
                            Surname = ""
                        },
                        new
                        {
                            Id = "21136259-c972-4611-a9a3-52eab8ee91c6",
                            Name = "Usuario4",
                            Surname = ""
                        },
                        new
                        {
                            Id = "0b55c083-955d-4047-bc6f-14ccc1a7c56f",
                            Name = "Usuario5",
                            Surname = ""
                        });
                });

            modelBuilder.Entity("API.Models.Bug", b =>
                {
                    b.HasOne("API.Models.Project", "Project")
                        .WithMany("Bugs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.User", "User")
                        .WithMany("Bugs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.Project", b =>
                {
                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Navigation("Bugs");
                });
#pragma warning restore 612, 618
        }
    }
}
